**Project 1: Data-Driven API Test Automation Framework** is designed to build a comprehensive Python-based testing framework that validates real-world REST APIs using external data sources. The project requires students to test three distinct APIs with specific endpoints: **JSONPlaceholder API** (GET/POST/PUT/DELETE `/posts`, GET `/posts/{id}`, GET `/users`, GET `/users/{id}`, GET `/comments`, GET `/posts/{id}/comments`), **ReqRes API** (GET `/api/users`, GET `/api/users/{id}`, POST `/api/users`, PUT `/api/users/{id}`, DELETE `/api/users/{id}`, POST `/api/register`, POST `/api/login`), and **HTTPBin API** (GET `/get`, POST `/post`, PUT `/put`, DELETE `/delete`, GET `/headers`, GET `/json`, GET `/status/{code}`). Students must implement data-driven testing by integrating external CSV files (world cities and population data), JSON datasets, and Excel test matrices to parameterize their test cases across these 20+ endpoints, validating HTTP methods, status codes, JSON schema compliance, and response times.

The technical implementation requires students to demonstrate proficiency with core Python libraries including requests for API interactions, pytest for test framework development, pandas for data processing, and jsonschema for response validation. Students must create modular API client classes that handle each endpoint systematically, data provider utilities that seamlessly integrate online data sources (https://raw.githubusercontent.com/datasets/world-cities/master/data/world-cities.csv and https://jsonplaceholder.typicode.com/posts), and comprehensive reporting systems that generate HTML and JSON test results with detailed endpoint-level statistics. The project expects delivery of 100+ automated test cases covering all specified API endpoints, complete data integration from online sources, and a clean, maintainable codebase that showcases object-oriented programming principles, file handling, exception management, and data structures - directly reinforcing all key concepts from the Python training curriculum while producing a professional-grade testing framework suitable for real-world application.
